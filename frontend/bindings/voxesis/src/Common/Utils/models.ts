// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Create as $Create} from "@wailsio/runtime";

export class HttpRequestOptions {
    "Url": string;
    "Method": RequestType;
    "Headers": { [_: string]: string };
    "Body": string;
    "Timeout": number;

    /** Creates a new HttpRequestOptions instance. */
    constructor($$source: Partial<HttpRequestOptions> = {}) {
        if (!("Url" in $$source)) {
            this["Url"] = "";
        }
        if (!("Method" in $$source)) {
            this["Method"] = ("" as RequestType);
        }
        if (!("Headers" in $$source)) {
            this["Headers"] = {};
        }
        if (!("Body" in $$source)) {
            this["Body"] = "";
        }
        if (!("Timeout" in $$source)) {
            this["Timeout"] = 0;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new HttpRequestOptions instance from a string or object.
     */
    static createFrom($$source: any = {}): HttpRequestOptions {
        const $$createField2_0 = $$createType0;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("Headers" in $$parsedSource) {
            $$parsedSource["Headers"] = $$createField2_0($$parsedSource["Headers"]);
        }
        return new HttpRequestOptions($$parsedSource as Partial<HttpRequestOptions>);
    }
}

export enum RequestType {
    /**
     * The Go zero value for the underlying type of the enum.
     */
    $zero = "",

    GET = "GET",
    POST = "POST",
    PUT = "PUT",
    DELETE = "DELETE",
    PATCH = "PATCH",
};

// Private type creation functions
const $$createType0 = $Create.Map($Create.Any, $Create.Any);
