// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Create as $Create} from "@wailsio/runtime";

export class BedrockMcServerStatus {
    "motd"?: string | null;
    "protocol"?: number | null;
    "version"?: string | null;
    "players_online"?: number | null;
    "players_max"?: number | null;
    "server_id"?: string | null;
    "level_name"?: string | null;
    "gamemode_id"?: string | null;
    "port_v4"?: number | null;
    "port_v6"?: number | null;

    /** Creates a new BedrockMcServerStatus instance. */
    constructor($$source: Partial<BedrockMcServerStatus> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new BedrockMcServerStatus instance from a string or object.
     */
    static createFrom($$source: any = {}): BedrockMcServerStatus {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new BedrockMcServerStatus($$parsedSource as Partial<BedrockMcServerStatus>);
    }
}

export class Plugin {
    "PluginName": string;
    "Manifest": string;

    /** Creates a new Plugin instance. */
    constructor($$source: Partial<Plugin> = {}) {
        if (!("PluginName" in $$source)) {
            this["PluginName"] = "";
        }
        if (!("Manifest" in $$source)) {
            this["Manifest"] = "";
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Plugin instance from a string or object.
     */
    static createFrom($$source: any = {}): Plugin {
        const $$createField1_0 = $Create.ByteSlice;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("Manifest" in $$parsedSource) {
            $$parsedSource["Manifest"] = $$createField1_0($$parsedSource["Manifest"]);
        }
        return new Plugin($$parsedSource as Partial<Plugin>);
    }
}

export class ProcessState {
    "pid": string;
    "cpu": number;
    "memory": number;
    "runTime": string;

    /** Creates a new ProcessState instance. */
    constructor($$source: Partial<ProcessState> = {}) {
        if (!("pid" in $$source)) {
            this["pid"] = "";
        }
        if (!("cpu" in $$source)) {
            this["cpu"] = 0;
        }
        if (!("memory" in $$source)) {
            this["memory"] = 0;
        }
        if (!("runTime" in $$source)) {
            this["runTime"] = "";
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new ProcessState instance from a string or object.
     */
    static createFrom($$source: any = {}): ProcessState {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new ProcessState($$parsedSource as Partial<ProcessState>);
    }
}

export class SystemState {
    "CpuCores": number;
    "CpuUsage": number;
    "MemoryUsage": number;
    "OsMemory": number;

    /** Creates a new SystemState instance. */
    constructor($$source: Partial<SystemState> = {}) {
        if (!("CpuCores" in $$source)) {
            this["CpuCores"] = 0;
        }
        if (!("CpuUsage" in $$source)) {
            this["CpuUsage"] = 0;
        }
        if (!("MemoryUsage" in $$source)) {
            this["MemoryUsage"] = 0;
        }
        if (!("OsMemory" in $$source)) {
            this["OsMemory"] = 0;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new SystemState instance from a string or object.
     */
    static createFrom($$source: any = {}): SystemState {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new SystemState($$parsedSource as Partial<SystemState>);
    }
}
